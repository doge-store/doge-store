import {
  PiArrowLeft,
  PiArrowRight,
  PiEnvelopeFill,
  PiLockFill,
} from "react-icons/pi";
import { Link } from "react-router-dom";//useNavigate
import { useNavigate } from "react-router-dom";

import google from "/images/google.png";
import img from "/images/login_bg_img.png";
import logo from "/images/logo.png";

// import "swiper/css";

// import { Autoplay, FreeMode, Navigation } from "swiper/modules";
// import { Swiper, SwiperSlide } from "swiper/react";
// import { testimonials } from "../data/data";
// import {SyntheticEvent} from "react";

import * as auth from "../net/auth.ts";
import React, { useState, SyntheticEvent } from "react";

import * as role from "../models/Role.ts";
// import * as uin from "../models/UserInfo.ts";
// import Input from "../common/form/inputs/text";
// import Password from "../common/form/inputs/password";
// import Wrapper from "../common/form/inputs/wrapper";

export default () => {
interface Form {
  login: string | undefined;
  pw: string | undefined;
}

const [form, setForm] = useState<Form>({ login: undefined, pw: undefined });

// const [errors, setErrors] = useState<{ [k: string]: string[] } | undefined>(undefined);
// const [isVisiblePIN, setVisible] = useState<"invisible" | undefined>("invisible");
// const [pinStatusMsg, setVisibleStatusMsg] = useState<"invisible" | undefined>("invisible");

const validateEmail = (email) => {
    return String(email)
      .toLowerCase()
      .match(
        /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|.(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
      );
  };

const nav = useNavigate();

const login = (e: SyntheticEvent) => {
      console.log("loging");
      e.preventDefault();
}

const handleSubmit = (e: SyntheticEvent) => {
    console.log("loging");

    e.preventDefault();

    auth.login(form)
      .then(() => {
        const appRoles = window.localStorage.getItem("role");

        switch (appRoles) {
          case role.Role.CUSTOMER:
            nav("/app/profile");
            return;
          // case T.Role.MANAGER:
          //   nav("/manager");
          //   return;
          default:
            nav("/app"); // @todo: where to navigate guest and admin?
        }
      }).catch((err) => setErrors(err as any));
    // nav("/app");
  };// handleSubmit

  const sendPinToEmail = (idKey: string) => {
    auth.sendOneTimeLogin(idKey)
      .then(() => {})
      .catch((err) => setErrors(err as any));

    // setVisible("invisible");
    // setVisibleStatusMsg(undefined);
  };

function LoginPage() {
  return (
    <main>
      <section className="flex justify-start items-center gap-8 xl:gap-20 xxl:gap-32 max-xl:flex-col ">
        <div className=" relative lg:max-h-screen lg:min-h-screen  overflow-hidden max-xl:order-2">
          <img src={img} alt="" className=" object-cover h-full" />

          <div className="absolute bottom-10 xl:bottom-20 left-4 xl:left-16 lg:max-xxl:mr-8  xxl:left-24 xxxl:left-32 testimonial-bg p-4 sm:p-8 max-xl:container lg:w-[550px] rounded-xl overflow-hidden">

          </div>
        </div>
        <div className=" max-xl:container xl:w-[650px] xl:pr-8 max-xl:stp-30">
          <Link to={"/"}>
            <img src={logo} alt=""/>
          </Link>
          <h2 className="display-4 py-5">Login</h2>
          <p className=" text-bodyText pb-6 lg:pb-10">
            own solutions for real life
          </p>
          <button className="flex justify-center items-center gap-2 font-semibold bg-softBg py-4 rounded-xl w-full">
            {" "}
            <span>
              <img src={google} alt=""/>
            </span>{" "}
            Sign up with Google
          </button>
          <form onSubmit={handleSubmit}>
            <div className=" py-6 lg:py-8 text-center">
              <p className="relative after:absolute after:top-3 after:left-0 after:h-px after:bg-strokeColor  after:w-[40%] before:absolute before:top-3 before:right-0 before:h-px before:bg-strokeColor  max-md:before:content-none max-md:after:content-none before:w-[40%]">
                Or Sign In With
              </p>
            </div>
            <div className="grid grid-cols-2 gap-6">
              <div className="col-span-2 py-4 px-8 border  flex justify-start items-center gap-2">
              <span className="text-xl text-bodyText">
                <PiEnvelopeFill/>
              </span>

            <input type="text" placeholder="Type email address"
                    className=" placeholder:text-bodyText w-full outline-none" />

              </div>
              <div className="col-span-2 py-4 px-8 border  flex justify-start items-center gap-2">
              <span className="text-xl text-bodyText">
                <PiLockFill/>
              </span>
                <input type="password" placeholder="Password"
                    className=" placeholder:text-bodyText w-full outline-none"
                />
              </div>
              <div className="col-span-2 table-checkbox flex justify-between items-center">
                <label className="flex justify-start items-center gap-2">
                  <input type="checkbox" className=" "/>
                  <p>Remember me</p>
                </label>
                <Link to={"/contact"} className=" font-medium">
                  Forget Password?
                </Link>
              </div>
              <div className="col-span-2">
                <Link onSubmit={login}
                      to={"/"}
                      className="py-4 bg-p1 text-white block text-center border border-p1 hover:bg-s2 hover:border-mainTextColor hover:text-mainTextColor duration-500"
                >
                  Login
                </Link>
              </div>
            </div>

          </form>

        </div>
      </section>
    </main>
);
}
};
// export default LoginPage;
